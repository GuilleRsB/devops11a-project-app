name: Deploy Pipeline

on:
    pull_request:
      branches:
        - main
    push:
      branches:
        - main

env:
  PYTHON_VERSION: '3.10'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('app/requirements.txt') }}
          restore-keys: |
            pip-

      - name: Upgrade pip
        run: pip3 install --upgrade pip

  semantic_release:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies for semantic-release
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/commit-analyzer @semantic-release/release-notes-generator conventional-changelog-conventionalcommits@6

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  build_push_image:
    runs-on: ubuntu-latest
    needs: semantic_release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }}

  notify_slack:
    runs-on: ubuntu-latest
    needs: build_push_image
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Get workflow status
        id: get_status
        run: echo "status=${{ needs.build_push_image.result }}" >> $GITHUB_OUTPUT

      - name: Extract changelog from latest release
        run: |
          gh release view --json body -q ".body" > changelog.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Send Slack notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_WEBHOOK_URL }}
        run: |
          changelog=$(jq -Rs . < changelog.txt)
          payload=$(jq -n \
            --arg repo "${{ github.repository }}" \
            --arg branch "${{ github.ref_name }}" \
            --arg status "${{ needs.build_push_image.result }}" \
            --arg changelog "$changelog" \
            '{
              text: "*[Deploy Pipeline]*\n*Repository:* \($repo)\n*Branch:* \($branch)\n*Status:* \($status)\n\n*Changelog:*\n\($changelog)"
            }')
          curl -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK_URL"