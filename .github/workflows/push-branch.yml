name: Push Checks

on:
  push:
    branches-ignore:
      - main
      - dev

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
            path: ~/.cache/pip
            key: pip-${{ hashFiles('app/requirements.txt') }}
            restore-keys: |
                pip-

      - name: Upgrade pip
        run: pip3 install --upgrade pip

  linting_action:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Restore pip cache
        uses: actions/cache@v3
        with:
            path: ~/.cache/pip
            key: pip-${{ hashFiles('requirements.txt') }}
            restore-keys: |
              pip-

      - name: Set up virtualenv and install dependencies
        run: |
            python -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt

      - name: Run Pylint
        run: |
          source venv/bin/activate
          pylint --rcfile=app/.pylintrc app/app.py

  test_coverage_action:
    runs-on: ubuntu-latest
    needs: linting_action
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
              pip-

      - name: Set up virtualenv and install dependencies
        run: |
            python -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt  

      - name: Run tests
        run: |
            source venv/bin/activate
            pytest -v --tb=short

      - name: Run coverage
        run: |
          source venv/bin/activate
          mkdir -p coverage_reports
          pytest --cov=app --cov-report=xml app/test_app.py